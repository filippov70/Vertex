//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2013.04.02 at 06:25:35 PM NOVT 
//


package org.tomskgislab.vertex.xml.zem.zone.classes;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for Type_Unit.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="Type_Unit">
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *     &lt;enumeration value="Точка"/>
 *     &lt;enumeration value="Линия"/>
 *     &lt;enumeration value="Дуга"/>
 *     &lt;enumeration value="Прямоугольник"/>
 *     &lt;enumeration value="Окружность"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlType(name = "Type_Unit")
@XmlEnum
public enum TypeUnit {

    @XmlEnumValue("\u0422\u043e\u0447\u043a\u0430")
    ТОЧКА("\u0422\u043e\u0447\u043a\u0430"),
    @XmlEnumValue("\u041b\u0438\u043d\u0438\u044f")
    ЛИНИЯ("\u041b\u0438\u043d\u0438\u044f"),
    @XmlEnumValue("\u0414\u0443\u0433\u0430")
    ДУГА("\u0414\u0443\u0433\u0430"),
    @XmlEnumValue("\u041f\u0440\u044f\u043c\u043e\u0443\u0433\u043e\u043b\u044c\u043d\u0438\u043a")
    ПРЯМОУГОЛЬНИК("\u041f\u0440\u044f\u043c\u043e\u0443\u0433\u043e\u043b\u044c\u043d\u0438\u043a"),
    @XmlEnumValue("\u041e\u043a\u0440\u0443\u0436\u043d\u043e\u0441\u0442\u044c")
    ОКРУЖНОСТЬ("\u041e\u043a\u0440\u0443\u0436\u043d\u043e\u0441\u0442\u044c");
    private final String value;

    TypeUnit(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static TypeUnit fromValue(String v) {
        for (TypeUnit c: TypeUnit.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
